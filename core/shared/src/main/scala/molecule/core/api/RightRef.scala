package molecule.core.api

import molecule.core.ast.DataModel._

// Initiate right join
trait RightRefOp_0[Entity[_, _]] {
  protected def _optEntity[RefTpl](optRefElements: List[Element]): Entity[Option[RefTpl], Any] = ???
}
trait RightRef_0[Entity[_, _]] { self: RightRefOp_0[Entity] =>
  final def ?[a                                                               ] (optEntity: Molecule_01[a                                                               ]): Entity[Option[a                                                                 ], Any] = _optEntity[a                                                                 ](optEntity.elements)
  final def ?[a, b                                                            ] (optEntity: Molecule_02[a, b                                                            ]): Entity[Option[(a, b                                                            )], Any] = _optEntity[(a, b                                                            )](optEntity.elements)
  final def ?[a, b, c                                                         ] (optEntity: Molecule_03[a, b, c                                                         ]): Entity[Option[(a, b, c                                                         )], Any] = _optEntity[(a, b, c                                                         )](optEntity.elements)
  final def ?[a, b, c, d                                                      ] (optEntity: Molecule_04[a, b, c, d                                                      ]): Entity[Option[(a, b, c, d                                                      )], Any] = _optEntity[(a, b, c, d                                                      )](optEntity.elements)
  final def ?[a, b, c, d, e                                                   ] (optEntity: Molecule_05[a, b, c, d, e                                                   ]): Entity[Option[(a, b, c, d, e                                                   )], Any] = _optEntity[(a, b, c, d, e                                                   )](optEntity.elements)
  final def ?[a, b, c, d, e, f                                                ] (optEntity: Molecule_06[a, b, c, d, e, f                                                ]): Entity[Option[(a, b, c, d, e, f                                                )], Any] = _optEntity[(a, b, c, d, e, f                                                )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g                                             ] (optEntity: Molecule_07[a, b, c, d, e, f, g                                             ]): Entity[Option[(a, b, c, d, e, f, g                                             )], Any] = _optEntity[(a, b, c, d, e, f, g                                             )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h                                          ] (optEntity: Molecule_08[a, b, c, d, e, f, g, h                                          ]): Entity[Option[(a, b, c, d, e, f, g, h                                          )], Any] = _optEntity[(a, b, c, d, e, f, g, h                                          )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i                                       ] (optEntity: Molecule_09[a, b, c, d, e, f, g, h, i                                       ]): Entity[Option[(a, b, c, d, e, f, g, h, i                                       )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i                                       )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j                                    ] (optEntity: Molecule_10[a, b, c, d, e, f, g, h, i, j                                    ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j                                    )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j                                    )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k                                 ] (optEntity: Molecule_11[a, b, c, d, e, f, g, h, i, j, k                                 ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k                                 )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k                                 )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l                              ] (optEntity: Molecule_12[a, b, c, d, e, f, g, h, i, j, k, l                              ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l                              )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l                              )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m                           ] (optEntity: Molecule_13[a, b, c, d, e, f, g, h, i, j, k, l, m                           ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m                           )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m                           )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n                        ] (optEntity: Molecule_14[a, b, c, d, e, f, g, h, i, j, k, l, m, n                        ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n                        )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n                        )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o                     ] (optEntity: Molecule_15[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o                     ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o                     )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o                     )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p                  ] (optEntity: Molecule_16[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p                  ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p                  )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p                  )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q               ] (optEntity: Molecule_17[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q               ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q               )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q               )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r            ] (optEntity: Molecule_18[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r            ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r            )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r            )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s         ] (optEntity: Molecule_19[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s         ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s         )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s         )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t      ] (optEntity: Molecule_20[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t      ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t      )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t      )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u   ] (optEntity: Molecule_21[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u   ]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u   )], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u   )](optEntity.elements)
  final def ?[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v] (optEntity: Molecule_22[a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v]): Entity[Option[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v)], Any] = _optEntity[(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v)](optEntity.elements)
}

